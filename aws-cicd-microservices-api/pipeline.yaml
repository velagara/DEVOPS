
AWSTemplateFormatVersion: "2010-09-09"
Description: "DevTools - Pipeline"

Parameters:
  ServiceName:
    Type: String
  BranchName:
    Type: String
    Default: main
  Email:
    Type: String
    Default: your@mail.com
    Description: Your e-mail
  ManualApproval:
    Type: String
    Default: true
    AllowedValues:
      - true
      - false
  TestDockerFileLint:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  TestSastSecurity:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  TestContainerSecurity:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
  ClusterName:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/ClusterName'
  KmsArn:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/kms_arn'
  S3Bucket:
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/DevTools/s3_bucket'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Service Configuration"
        Parameters:
          - ServiceName
          - BranchName
          - Email
          - ManualApproval
      -
        Label:
          default: "Pipeline - Tests"
        Parameters:
          - TestDockerFileLint
          - TestSastSecurity
          - TestContainerSecurity
      -
        Label:
          default: "Commons (do not change)"
        Parameters:
          - ClusterName
          - S3Bucket
          - KmsArn

Conditions:
  MasterBranch: !Equals [ !Ref BranchName, "main" ]
  ManualApproval: !Not [ !Equals [ !Ref ManualApproval, "false" ] ]
  TestDockerFileLint: !Not [ !Equals [ !Ref TestDockerFileLint, "false" ] ]
  TestSastSecurity: !Not [ !Equals [ !Ref TestSastSecurity, "false" ] ]
  TestContainerSecurity: !Not [ !Equals [ !Ref TestContainerSecurity, "false" ] ]


Resources:

  #-----------------------------------------------------------------------------#
  # SNS
  #-----------------------------------------------------------------------------#
  SNSTopic:
    Condition: ManualApproval
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
        - Endpoint: !Ref Email
          Protocol: email

  #-----------------------------------------------------------------------------#
  # CodeCommit
  #-----------------------------------------------------------------------------#
  Repo:
    Type: AWS::CodeCommit::Repository
    Condition: MasterBranch
    Properties:
      RepositoryName: !Ref ServiceName
      RepositoryDescription: !Sub "Microservice ${ServiceName}"



  #-----------------------------------------------------------------------------#
  # ECR
  #-----------------------------------------------------------------------------#
  ECR:
    Condition: MasterBranch
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Ref ServiceName
      RepositoryPolicyText:
        Version: "2012-10-17"
        Statement:
          -
            Sid: AllowPushPull
            Effect: Allow
            Principal:
              AWS:
                - !Sub arn:aws:iam::${AWS::AccountId}:root
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - ecr:*

  #-----------------------------------------------------------------------------#
  # CodePipeline
  #-----------------------------------------------------------------------------#
  Pipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name: !Sub ${ServiceName}-${BranchName}
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref S3Bucket
        EncryptionKey:
          Id: !Ref KmsArn
          Type: KMS

      Stages:

        #-----------------------------------------------------------------------------#
        # Source
        #-----------------------------------------------------------------------------#
        - Name: Source
          Actions:
            - Name: Source
              Namespace: "SourceVariables"
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: "1"
                Provider: CodeCommit
              Configuration:
                RepositoryName: !Sub ${ServiceName}
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: Source
              RunOrder: 1

        #-----------------------------------------------------------------------------#
        # Continuous Integration
        #-----------------------------------------------------------------------------#
        - Name: "Continuous_Integration"
          Actions:

            - Name: GitSecrets
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: GitSecret
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref cbGitSecrets
              RunOrder: 1

            - Name: UnitTest
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: UnitTest
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref cbUnitTest
                EnvironmentVariables: !Sub |
                  [
                    {
                      "name":"ServiceName",
                      "value":"${ServiceName}",
                      "type":"PLAINTEXT"
                    },
                    {
                      "name":"BranchName",
                      "value":"${BranchName}",
                      "type":"PLAINTEXT"
                    },
                    {
                      "name":"GitCommitID",
                      "value":"#{SourceVariables.CommitId}",
                      "type":"PLAINTEXT"
                    }
                  ]
              RunOrder: 1

            - Name: CFN-Nag
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: CFN-Nag
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref cbCfnNag
              RunOrder: 1

            - !If
              - TestDockerFileLint
              - Name: DockerFileLint
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                OutputArtifacts:
                  - Name: DockerFileLint
                InputArtifacts:
                  - Name: Source
                Configuration:
                  ProjectName: !Ref cbDockerFileLint
                RunOrder: 1
              - !Ref AWS::NoValue

            - !If
              - TestContainerSecurity
              - Name: ContainerSecurity
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                OutputArtifacts:
                  - Name: ContainerSecurity
                InputArtifacts:
                  - Name: Source
                Configuration:
                  ProjectName: !Ref cbContainerSecurity
                  EnvironmentVariables: !Sub |
                    [
                      {
                        "name":"ServiceName",
                        "value":"${ServiceName}",
                        "type":"PLAINTEXT"
                      },
                      {
                        "name":"BranchName",
                        "value":"${BranchName}",
                        "type":"PLAINTEXT"
                      },
                      {
                        "name":"GitCommitID",
                        "value":"#{SourceVariables.CommitId}",
                        "type":"PLAINTEXT"
                      }
                    ]
                RunOrder: 2
              - !Ref AWS::NoValue

            - !If
              - TestSastSecurity
              - Name: SastSecurity
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Version: "1"
                  Provider: CodeBuild
                OutputArtifacts:
                  - Name: SastSecurity
                InputArtifacts:
                  - Name: Source
                Configuration:
                  ProjectName: !Ref cbSastSecurity
                  EnvironmentVariables: !Sub |
                    [
                      {
                        "name":"ServiceName",
                        "value":"${ServiceName}",
                        "type":"PLAINTEXT"
                      },
                      {
                        "name":"BranchName",
                        "value":"${BranchName}",
                        "type":"PLAINTEXT"
                      },
                      {
                        "name":"GitCommitID",
                        "value":"#{SourceVariables.CommitId}",
                        "type":"PLAINTEXT"
                      }
                    ]
                RunOrder: 2
              - !Ref AWS::NoValue


        #-----------------------------------------------------------------------------#
        # Publish
        #-----------------------------------------------------------------------------#
        - Name: Publish
          Actions:
            - Name: Publish
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: Publish
              InputArtifacts:
                - Name: Source
              Configuration:
                ProjectName: !Ref cbPublish
                EnvironmentVariables: !Sub |
                  [
                    {
                      "name":"ServiceName",
                      "value":"${ServiceName}",
                      "type":"PLAINTEXT"
                    },
                    {
                      "name":"BranchName",
                      "value":"${BranchName}",
                      "type":"PLAINTEXT"
                    },
                    {
                      "name":"GitCommitID",
                      "value":"#{SourceVariables.CommitId}",
                      "type":"PLAINTEXT"
                    }
                  ]
              RunOrder: 1

        #-----------------------------------------------------------------------------#
        # Continuous Deployment
        #-----------------------------------------------------------------------------#
        - Name: Deploy
          Actions:

            - !If
              - ManualApproval
              - Name: ManualApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Version: "1"
                  Provider: Manual
                Configuration:
                  CustomData: "Aguardando aprovação manual"
                  NotificationArn: !Ref SNSTopic
                RunOrder: 1
              - !Ref AWS::NoValue


            - Name: Service
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                RoleArn: !GetAtt CodeDeployRole.Arn
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                StackName: !Sub "${ServiceName}-${BranchName}"
                ChangeSetName: !Sub "${ServiceName}-${BranchName}"
                TemplatePath: "Source::templates/service.yaml"
              InputArtifacts:
                - Name: Source
              RunOrder: 2
            - Name: Task
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: ECS
              Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Sub ${ServiceName}-${BranchName}
                FileName: taskdef.json
              InputArtifacts:
                - Name: Publish
              RunOrder: 3


  #-----------------------------------------------------------------------------#
  # CodeBuild Project
  #-----------------------------------------------------------------------------#
  cbGitSecrets:
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/git-secrets.yaml
      TimeoutInMinutes: 10

  cbCfnNag:
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/cfn-nag.yaml
      TimeoutInMinutes: 10

  cbUnitTest:
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/unit-test.yaml
      TimeoutInMinutes: 10

  cbDockerFileLint:
    Condition: TestDockerFileLint
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/hadolint.yaml
      TimeoutInMinutes: 10

  cbSastSecurity:
    Condition: TestSastSecurity
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/sast.yaml
      TimeoutInMinutes: 10

  cbContainerSecurity:
    Condition: TestContainerSecurity
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/trivy.yaml
      TimeoutInMinutes: 20

  cbPublish:
    Type: AWS::CodeBuild::Project
    Properties:
      EncryptionKey: !Ref KmsArn
      Artifacts:
        Type: CODEPIPELINE
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec/ecr.yaml
      TimeoutInMinutes: 10


  #-----------------------------------------------------------------------------#
  # Role for CodePipeline service
  #-----------------------------------------------------------------------------#

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: GetKms
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "kms:DescribeKey"
                - "kms:GenerateDataKey*"
                - "kms:Encrypt"
                - "kms:ReEncrypt*"
                - "kms:Decrypt"
              Resource: !Ref KmsArn
        - PolicyName: PassRoles
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "iam:GetRole"
                - "iam:PassRole"
                - "iam:ListRoles"
              Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AWSCodeCommitFullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildAdminAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator


  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "kms:DescribeKey"
                - "kms:GenerateDataKey*"
                - "kms:Encrypt"
                - "kms:ReEncrypt*"
                - "kms:Decrypt"
              Resource: !Ref KmsArn
            -
              Effect: Allow
              Action:
                - "iam:GetRole"
                - "iam:PassRole"
                - "iam:ListRoles"
                - "iam:CreateRole"
                - "iam:DeleteRole"
                - "iam:AttachRolePolicy"
                - "iam:DetachRolePolicy"
              Resource: "*"
            -
              Effect: Allow
              Action:
                - sts:AssumeRole
              Resource:
                - !GetAtt CodePipelineRole.Arn
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AWSCodeDeployRoleForECS
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess

  #-----------------------------------------------------------------------------#
  # Role for CodeBuild service
  #-----------------------------------------------------------------------------#
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: GetKmsCodeBuild
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "kms:DescribeKey"
                - "kms:GenerateDataKey*"
                - "kms:Encrypt"
                - "kms:ReEncrypt*"
                - "kms:Decrypt"
              Resource: !Ref KmsArn
        - PolicyName: EcrImageScan
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                - "ecr:StartImageScan"
                - "ecr:DescribeImageScanFindings"
                - "ecr:PutImageScanningConfiguration"
              Resource: "*"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess
        - arn:aws:iam::aws:policy/CloudWatchFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
